clear;
clc;

choice_prob_list = [0.6 0.25 0.15]; % Hierarchical choice probability; preferred -> unpreferred

n_reps = 10; % Number of repetitions for each trial type
n_sessions = 20; % Number of experimental sessions
decay_rate = nthroot(0.5, 3);

strategy_list = {'selfish', 'competitive', 'interactive-compete', ...
  'interactive-cooperate', 'benevolent', 'random', 'value-update-unchosen'...
  'value-update-unrewarded'};

folder_name = datestr(datetime, 'yyyy-mm-dd_HH-MM-SS');
filepath = [pct.util.get_project_folder '/+pct/+simulations/+data/' 'with-val-update-' folder_name];
mkdir(filepath);

parpool(feature('numcores'));

for num_patches = 2:4
  for coop_reward = [0.5 1]
    for max_moves = 2:4 % Maximum number of moves that can be made per trial (and thus max number of patches collected)
      for m1_win_prob = 0.3:0.1:0.7 % Probability of m1 willing in competition
        for m1_error_rate = 0.05:0.05:0.4 % Error rate per saccade for m1
          for m2_error_rate = 0.05:0.05:0.4 % Error rate per saccade for m2
            fprintf(['Starting ... \n' ...
              'num_patches: %d \n', ...
              'coop_reward: %f \n', ...
              'max_moves: %d \n', ...
              'm1_win_prob: %f \n', ...
              'm1_error_rate: %f \n', ...
              'm2_error_rate: %f \n \n', ...
              ], num_patches, coop_reward, max_moves, m1_win_prob, ...
              m1_error_rate, m2_error_rate);
            result_mat_across_strategies = [];
            for m1_strategy_ind = 1:numel(strategy_list)
              for m2_strategy_ind = 1:numel(strategy_list)
                m1_strategy = strategy_list{m1_strategy_ind};
                m2_strategy = strategy_list{m2_strategy_ind};
                parfor session = 1:n_sessions
                  result_mat_across_strategies = [result_mat_across_strategies ...
                    pct.simulations.pit_strategies( ...
                    m1_strategy, m2_strategy, m1_error_rate, m2_error_rate, ...
                    choice_prob_list, m1_win_prob, coop_reward, max_moves, ...
                    n_reps, num_patches, decay_rate, session)];
                end
              end
            end
            filename = ['patches-' num2str(num_patches) '-' ...
              'coop-' num2str(coop_reward*100) '-' ...
              'moves-' num2str(max_moves) '-' ...
              'm1win-' num2str(m1_win_prob*100) '-' ...
              'm1err-' num2str(m1_error_rate*100) '-' ...
              'm2err-' num2str(m2_error_rate*100) ...
              '.mat'];
            save( fullfile(filepath, filename), 'result_mat_across_strategies' );
          end
        end
      end
    end
  end
end